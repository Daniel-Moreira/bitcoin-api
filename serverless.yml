service: bitcoin-api

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1
  versionLambda: false

  environment:
    SERVICE: ${self:service}-${opt:stage, self:provider.stage}
    REGION: ${self:provider.region}
    REGISTER_USERS: register-users-${opt:stage, self:provider.stage}
    TRACK_HISTORY_DB: bitcoin-track-history-${opt:stage, self:provider.stage}
    HOST_DB:
    USER_DB:
    PORT_DB:
    PWD_DB:

functions:
  # verify:
  #   handler: src/interface/authentication.verify
  sign:
    handler: src/interface/authentication.sign
    events:
      - http:
        path: sign
        method: POST
#   xChangeBitcoin:
#     handler: src/interface/bitcoin.xChangeHandler
#     events:
#       - http:
#         path: xChangeBitcoin
#         method: GET
#       - http:
#         path: xChangeBitcoin
#         method: POST
#       - http:
#         path: /
#         method: GET
#         authorizer:
#           name: authorize
#           resultTtlInSeconds: 0
#       - http:
#         path: /
#         method: POST
#         authorizer:
#           name: authorize
#           resultTtlInSeconds: 0

# resources:
#   Resources:
#     registerUsers:
#       Type: 'AWS::DynamoDB::Table'
#       Properties:
#         AttributeDefinitions:
#           -
#             AttributeName: "user_id"
#             AttributeType: "S"            
#         KeySchema:
#           -
#             AttributeName: "user_id"
#             KeyType: "HASH"        
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: ${self:provider.environment.REGISTER_USERS} 